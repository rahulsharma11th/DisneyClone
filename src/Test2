using System.IO;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Azure.WebJobs;
using Microsoft.Azure.WebJobs.Extensions.Http;
using Microsoft.AspNetCore.Http;
using Microsoft.Extensions.Logging;
using Microsoft.Graph;
using Azure.Identity;

public static class GraphApiFunction
{
    [FunctionName("GetGraphData")]
    public static async Task<IActionResult> Run(
        [HttpTrigger(AuthorizationLevel.Function, "get", Route = null)] HttpRequest req,
        ILogger log)
    {
        var clientId = "your_client_id";
        var tenantId = "your_tenant_id";
        var clientSecret = "your_client_secret";
        var scopes = new[] { "https://graph.microsoft.com/.default" };

        var options = new TokenCredentialOptions
        {
            AuthorityHost = AzureAuthorityHosts.AzurePublicCloud
        };

        // Build a client secret credential
        var clientSecretCredential = new ClientSecretCredential(
            tenantId, clientId, clientSecret, options);

        // Initialize the GraphServiceClient
        var graphClient = new GraphServiceClient(clientSecretCredential, scopes);

        // Make a request to the Graph API
        var users = await graphClient.Users
            .Request()
            .GetAsync();

        // Process the data as needed
        // ...

        return new OkObjectResult(users);
    }
}
